{"version":3,"sources":["components/UserSearchForm.tsx","components/Link.tsx","components/MainTitle.tsx","components/UserSearchResultsList.tsx","App.tsx","models/UserSearchResultsModel.ts","models/UserSearchModel.ts","stores/RootModel.ts","stores/rootStore.ts","index.tsx"],"names":["DebouncedInput","_ref","defaultValue","onChange","_ref$debounceByMs","debounceByMs","onDebouncedChange","rest","Object","objectWithoutProperties","_useState","useState","setValue","slicedToArray","_useDebouncedCallback","useDebouncedCallback","debouncedValue","debouncedFunction","react_default","a","createElement","objectSpread","e","target","value","UserSearchStyledForm","styled","form","_templateObject","UserSearchForm","observer","_ref2","userSearchStore","onSubmit","preventDefault","fetchAndAssignSearchResults","type","placeholder","userInputQuery","setUserInputQuery","children","Link","href","_ref$isExternal","isExternal","startsWith","_ref$rel","rel","undefined","Title","h1","MainTitle_templateObject","MainTitle","props","StyledSearchResultsHeader","header","UserSearchResultsList_templateObject","SearchResultsHeader","searchResultsCount","concat","UserSearchResultListItem","li","_templateObject2","UserAvatarImage","assign","img","_templateObject3","defaultProps","loading","decoding","Username","span","_templateObject4","UserSearchResultLink","_templateObject5","UserSearchResultApiLink","_templateObject6","UserDetails","details","_templateObject7","StyledSummary","summary","_templateObject8","GitHubCardWrapper","div","_templateObject9","UserSearchResultItem","login","avatarUrl","avatar_url","url","html_url","id","onToggle","open","maybeGitHubCardPlaceholder","querySelector","window","githubCard","render","src","alt","className","data-github","UserSearchResultsOrderedList","ol","_templateObject10","SearchResultsPager","footer","_templateObject11","Button","button","_templateObject12","onClick","console","info","MaybePagerText","currentPage","totalPages","isDisplayed","UserSearchResultsList","userSearchResultsPages","userSearchResultsPage","userSearchResults","items","total_count","hasPreviousPage","hasNextPage","hasQuery","fetchPreviousPage","fetchNextPage","Fragment","map","userSearchResult","key","disabled","globalCssNormalize","css","App_templateObject","normalize","Main","main","App_templateObject2","App","store","core_browser_esm","styles","UserSearchResultModel","types","model","string","identifierNumber","followers_url","subscriptions_url","organizations_url","repos_url","score","number","UserSearchResultsModel","optional","incomplete_results","boolean","array","UserSearchModel","views","self","userSearchEndpointUrl","searchParams","fullUrl","URL","entries","forEach","paramKey","paramValue","set","toString","getUrlWithParams","q","page","per_page","Math","ceil","actions","flow","userSearchResultsResponse","fetch","json","RootModel","rootStoreInitialSnapshot","rootStore","createRootStore","rootModelSnapshot","create","createRootModel","rootStore_rootStore","getStore","rootElement","Error","react","document","getElementById","renderApp"],"mappings":"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","file":"static/js/main.5796d521.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { WithUserSearchStore } from '../stores/RootModel'\nimport { useDebouncedCallback } from 'use-debounce'\nimport styled from '@emotion/styled'\n\ninterface DebouncedInputProps extends Partial<WithOnChange> {\n  defaultValue: string\n  debounceByMs?: number\n  onDebouncedChange: (v: string) => void\n}\nfunction DebouncedInput({\n  defaultValue,\n  onChange,\n  debounceByMs = 400,\n  onDebouncedChange,\n  ...rest\n}: DebouncedInputProps) {\n  const [, setValue] = useState(defaultValue)\n  const setValueAndCallDebouncedHandler = (debouncedValue: typeof defaultValue) => {\n    setValue(debouncedValue)\n    onDebouncedChange(debouncedValue)\n  }\n  const [debouncedFunction] = useDebouncedCallback(setValueAndCallDebouncedHandler, debounceByMs)\n\n  return (\n    <input\n      {...{\n        defaultValue,\n        onChange(e) {\n          debouncedFunction(e.target.value)\n          onChange && onChange(e)\n        },\n        ...rest,\n      }}\n    />\n  )\n}\n\nconst UserSearchStyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  font-size: 1.5rem;\n  @media (max-width: 319px) {\n    flex-direction: column;\n  }\n  @media (min-width: 768px) {\n    font-size: 2rem;\n    margin: 1em auto;\n  }\n`\n\nexport const UserSearchForm = observer(({ userSearchStore, ...rest }: WithUserSearchStore) => (\n  <UserSearchStyledForm\n    {...{\n      onSubmit(e) {\n        e.preventDefault()\n        userSearchStore.fetchAndAssignSearchResults()\n      },\n      ...rest,\n    }}\n  >\n    <DebouncedInput\n      {...{\n        type: 'search',\n        placeholder: 'Enter username',\n        defaultValue: userSearchStore.userInputQuery,\n        onDebouncedChange: userSearchStore.setUserInputQuery,\n      }}\n    />\n    <button\n      {...{\n        type: 'submit',\n        children: 'Search users',\n      }}\n    />\n  </UserSearchStyledForm>\n))\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\ninterface LinkProps extends WithChildren {\n  href: string\n  isExternal?: boolean\n  rel?: string\n}\nexport const Link = observer(\n  ({\n    href,\n    isExternal = href.startsWith('http'),\n    rel = isExternal ? 'noopener noreferrer' : undefined,\n    ...rest\n  }: // eslint-disable-next-line jsx-a11y/anchor-has-content, this-is-a-false-positive\n  LinkProps) => <a {...{ href, rel, ...rest }} />,\n)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Link } from './Link'\nimport styled from '@emotion/styled'\n\nconst Title = styled.h1`\n  text-align: center;\n`\n\nexport const MainTitle = observer((props) => (\n  <Title {...props}>\n    {'GitHub '}\n    <Link {...{ href: 'https://developer.github.com/v3/search/#search-users', children: 'user search' }} />\n    {' (limited to '}\n    <Link {...{ href: 'https://developer.github.com/v3/search/#rate-limit', children: '10 requests per minute' }} />\n    {')'}\n  </Title>\n))\n","import React from 'react'\nimport { Link } from './Link'\nimport { WithUserSearchStore } from '../stores/RootModel'\nimport { observer } from 'mobx-react'\nimport styled from '@emotion/styled'\n\nconst StyledSearchResultsHeader = styled.header`\n  display: flex;\n  justify-content: center;\n  font-size: 1.5rem;\n`\nconst SearchResultsHeader = observer(({ searchResultsCount }: { searchResultsCount: number }) => (\n  <StyledSearchResultsHeader\n    {...{ children: searchResultsCount > 0 ? `Found ${searchResultsCount} user(s)` : 'No results yet' }}\n  />\n))\n\nconst UserSearchResultListItem = styled.li`\n  display: flex;\n  align-items: center;\n  break-inside: avoid;\n`\nconst UserAvatarImage = Object.assign(\n  styled.img`\n    width: 2rem;\n    height: 2rem;\n  `,\n  { defaultProps: { loading: 'lazy', decoding: 'async' } },\n)\nconst Username = styled.span`\n  margin-left: 0.3em;\n`\n\nconst UserSearchResultLink = styled(Link)`\n  display: inline-flex;\n`\nconst UserSearchResultApiLink = styled(UserSearchResultLink)`\n  font-size: 0.7em;\n  margin-left: 0.3em;\n  text-decoration: none;\n  ::before {\n    content: '(';\n  }\n  ::after {\n    content: ')';\n  }\n`\n\nconst UserDetails = styled.details`\n  width: 100%;\n  padding: 0.5em;\n  &[open] {\n    background-color: lightblue;\n  }\n`\n\nconst StyledSummary = styled.summary`\n  display: flex;\n  align-items: center;\n  height: 2.5rem;\n  :hover {\n    background-color: lightgreen;\n  }\n`\n\nconst GitHubCardWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst UserSearchResultItem = observer(({ login, avatar_url: avatarUrl, url, html_url, id, ...rest }) => (\n  <UserSearchResultListItem {...rest}>\n    <UserDetails\n      {...{\n        // @ts-ignore\n        onToggle({ target }) {\n          if (target.open) {\n            // https://github.com/lepture/github-cards/blob/fca0b972f2398a84d17782d6dc9927b842c996d6/src/widget.js#L52\n            const maybeGitHubCardPlaceholder = target.querySelector('.github-card')\n            if (maybeGitHubCardPlaceholder) {\n              // @ts-ignore\n              window.githubCard.render(maybeGitHubCardPlaceholder)\n            }\n          }\n        },\n      }}\n    >\n      <StyledSummary>\n        <UserSearchResultLink {...{ href: html_url }}>\n          {/* eslint-disable-next-line jsx-a11y/alt-text, this-is-a-false-positive */}\n          <UserAvatarImage {...{ src: avatarUrl, alt: login }} />\n          <Username {...{ children: login }} />\n        </UserSearchResultLink>\n        <UserSearchResultApiLink {...{ href: url, children: 'API' }} />\n      </StyledSummary>\n      <GitHubCardWrapper>\n        <div {...{ className: 'github-card', 'data-github': login }} />\n      </GitHubCardWrapper>\n    </UserDetails>\n  </UserSearchResultListItem>\n))\n\nconst UserSearchResultsOrderedList = styled.ol`\n  padding: 0 1em;\n  column-gap: 1em;\n  list-style: none;\n  font-size: 1.4rem;\n  column-count: 2;\n  @media (max-width: 479px) {\n    column-count: 1;\n  }\n`\n\nconst SearchResultsPager = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Button = Object.assign(styled.button``, { defaultProps: { type: 'button', onClick: console.info } })\n\ninterface MaybePagerTextProps {\n  currentPage: number\n  totalPages: number\n  isDisplayed: boolean\n}\nconst MaybePagerText = observer(({ currentPage, totalPages, isDisplayed }: MaybePagerTextProps) => (\n  <span {...{ children: isDisplayed ? `Page ${currentPage} of ${totalPages}` : 'No results :(' }} />\n))\n\ninterface UserSearchResultsListProps extends WithUserSearchStore {}\nexport const UserSearchResultsList = observer(\n  ({\n    userSearchStore: {\n      userSearchResultsPages,\n      userSearchResultsPage,\n      userSearchResults: { items, total_count },\n      hasPreviousPage,\n      hasNextPage,\n      hasQuery,\n      fetchPreviousPage,\n      fetchNextPage,\n    },\n  }: UserSearchResultsListProps) => {\n    return (\n      <>\n        <SearchResultsHeader {...{ searchResultsCount: total_count }} />\n        <UserSearchResultsOrderedList>\n          {items.map((userSearchResult) => (\n            <UserSearchResultItem {...{ ...userSearchResult, key: userSearchResult.id }} />\n          ))}\n        </UserSearchResultsOrderedList>\n        <SearchResultsPager>\n          <Button {...{ children: 'Previous page', disabled: !hasPreviousPage, onClick: fetchPreviousPage }} />\n          <MaybePagerText\n            {...{ currentPage: userSearchResultsPage, totalPages: userSearchResultsPages, isDisplayed: hasQuery }}\n          />\n          <Button {...{ children: 'Next page', disabled: !hasNextPage, onClick: fetchNextPage }} />\n        </SearchResultsPager>\n      </>\n    )\n  },\n)\n","import { UserSearchForm } from './components/UserSearchForm'\nimport React from 'react'\nimport { Global as GlobalCss, css } from '@emotion/core'\nimport { normalize } from 'polished'\nimport { WithRootStore } from './stores/RootModel'\nimport { observer } from 'mobx-react'\nimport { MainTitle } from './components/MainTitle'\nimport { UserSearchResultsList } from './components/UserSearchResultsList'\nimport styled from '@emotion/styled'\n\nconst globalCssNormalize = css`\n  ${normalize()};\n  html {\n    touch-action: manipulation;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',\n      'Helvetica Neue', sans-serif;\n  }\n  body,\n  #root {\n    background-color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n    ::before,\n    ::after {\n      box-sizing: inherit;\n    }\n  }\n`\n\nconst Main = styled.main`\n  margin: 1em;\n  @media (min-width: 1024px) {\n    max-width: 60vw;\n    margin-right: auto;\n    margin-left: auto;\n  }\n`\n\nexport const App = observer(({ store: { userSearchStore } }: WithRootStore) => (\n  <>\n    <GlobalCss {...{ styles: globalCssNormalize }} />\n    <Main>\n      <header>\n        <MainTitle />\n        <UserSearchForm {...{ userSearchStore }} />\n      </header>\n      <UserSearchResultsList {...{ userSearchStore }} />\n    </Main>\n  </>\n))\n","import { types, SnapshotIn, Instance, SnapshotOut } from 'mobx-state-tree'\n\nconst UserSearchResultModel = types.model('UserSearchResultModel', {\n  login: types.string, // \"mojombo\"\n  id: types.identifierNumber, // 1\n  // \"node_id\": \"MDQ6VXNlcjE=\",\n  avatar_url: types.string, // \"https://...\"\n  // \"gravatar_id\": \"\",\n  url: types.string, // \"https://api.github.com/users/mojombo\",\n  html_url: types.string, // \"https://github.com/mojombo\",\n  followers_url: types.string, // \"https://api.github.com/users/mojombo/followers\",\n  subscriptions_url: types.string, // \"https://api.github.com/users/mojombo/subscriptions\",\n  organizations_url: types.string, // \"https://api.github.com/users/mojombo/orgs\",\n  repos_url: types.string, // \"https://api.github.com/users/mojombo/repos\",\n  // \"received_events_url\": \"https://api.github.com/users/mojombo/received_events\",\n  // \"type\": \"User\",\n  score: types.number, // 105.47857\n})\n\nexport const UserSearchResultsModel = types.model('UserSearchResultsModel', {\n  total_count: types.optional(types.number, 0),\n  incomplete_results: types.optional(types.boolean, false),\n  items: types.array(UserSearchResultModel),\n})\n\ntype UserSearchResultsModelT = typeof UserSearchResultsModel\nexport type UserSearchResultsModelType = Instance<UserSearchResultsModelT>\nexport type UserSearchResultsSnapshotIn = SnapshotIn<UserSearchResultsModelT>\nexport type UserSearchResultsSnapshotOut = SnapshotOut<UserSearchResultsModelT>\n","import { types, flow, Instance } from 'mobx-state-tree'\nimport {\n  UserSearchResultsModel,\n  UserSearchResultsSnapshotOut,\n  UserSearchResultsSnapshotIn,\n} from './UserSearchResultsModel'\n\ninterface GetUrlWithParams {\n  url: string\n  searchParams: { [k: string]: number | string }\n}\nfunction getUrlWithParams({ url, searchParams }: GetUrlWithParams) {\n  const fullUrl = new URL(url)\n  Object.entries(searchParams).forEach(([paramKey, paramValue]) =>\n    fullUrl.searchParams.set(paramKey, paramValue.toString()),\n  )\n  return fullUrl.toString()\n}\n\nconst EMPTY_QUERY = ''\nconst GITHUB_USER_SEARCH_API_ENDPOINT_URL = 'https://api.github.com/search/users'\nconst GITHUB_API_RESULTS_PER_PAGE = 30\nconst GITHUB_API_FIRST_RESULTS_PAGE = 1 // https://developer.github.com/v3/#pagination\n\nexport const UserSearchModel = types\n  .model('UserSearchModel', {\n    userSearchResultsPage: types.optional(types.number, GITHUB_API_FIRST_RESULTS_PAGE),\n    userInputQuery: types.optional(types.string, EMPTY_QUERY),\n    userSearchResults: UserSearchResultsModel,\n  })\n  .views((self) => ({\n    get hasQuery() {\n      return self.userInputQuery !== EMPTY_QUERY\n    },\n    get userSearchEndpointUrl() {\n      return getUrlWithParams({\n        url: GITHUB_USER_SEARCH_API_ENDPOINT_URL,\n        searchParams: {\n          q: self.userInputQuery,\n          page: self.userSearchResultsPage,\n          per_page: GITHUB_API_RESULTS_PER_PAGE,\n        },\n      })\n    },\n    get userSearchResultsPages() {\n      return Math.ceil(self.userSearchResults.total_count / GITHUB_API_RESULTS_PER_PAGE)\n    },\n  }))\n  .views((self) => ({\n    get hasNextPage() {\n      return self.hasQuery && self.userSearchResultsPage < self.userSearchResultsPages\n    },\n    get hasPreviousPage() {\n      return self.hasQuery && self.userSearchResultsPage > GITHUB_API_FIRST_RESULTS_PAGE\n    },\n  }))\n  .actions((self) => ({\n    fetchAndAssignSearchResults: flow(function* fetchSearchResults() {\n      let userSearchResults: UserSearchResultsSnapshotIn = {}\n      if (self.hasQuery) {\n        const userSearchResultsResponse = yield window.fetch(self.userSearchEndpointUrl)\n        userSearchResults = yield userSearchResultsResponse.json() as UserSearchResultsSnapshotOut\n      }\n      return Object.assign(self, { userSearchResults })\n    }),\n  }))\n  .actions((self) => ({\n    setUserInputQuery(userInputQuery: string) {\n      Object.assign(self, { userInputQuery })\n      return self.fetchAndAssignSearchResults()\n    },\n    fetchNextPage() {\n      if (self.hasNextPage) {\n        self.userSearchResultsPage++\n        self.fetchAndAssignSearchResults()\n      }\n    },\n    fetchPreviousPage() {\n      if (self.hasPreviousPage) {\n        self.userSearchResultsPage--\n        self.fetchAndAssignSearchResults()\n      }\n    },\n  }))\n\nexport type UserSearchModelType = Instance<typeof UserSearchModel>\n","import { types, SnapshotIn, Instance } from 'mobx-state-tree'\nimport { UserSearchModel } from '../models/UserSearchModel'\n\nexport const RootModel = types.model('RootModel', {\n  userSearchStore: UserSearchModel,\n})\n\nexport type RootModelType = Instance<typeof RootModel>\nexport type RootModelSnapshotIn = SnapshotIn<typeof RootModel>\n\nconst rootStoreInitialSnapshot: RootModelSnapshotIn = {\n  userSearchStore: {\n    userSearchResults: {},\n  },\n}\n\nexport function createRootModel(rootModelSnapshot: RootModelSnapshotIn = rootStoreInitialSnapshot) {\n  return RootModel.create(rootModelSnapshot)\n}\n\nexport interface WithRootStore {\n  store: RootModelType\n}\n\nexport type WithUserSearchStore = Pick<RootModelType, 'userSearchStore'>\n","import { RootModelType, createRootModel, WithRootStore } from './RootModel'\n\nlet rootStore: RootModelType | null = null\n\nfunction createRootStore(): RootModelType {\n  rootStore = createRootModel()\n  Object.assign(window, { rootStore })\n  return rootStore\n}\n\nconst getRootStore = (): RootModelType => rootStore || createRootStore()\n\nexport const getStore = (): WithRootStore => ({\n  store: getRootStore(),\n})\n","import React, { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport { App } from './App'\nimport { getStore } from './stores/rootStore'\n\nfunction renderApp(rootElement: HTMLElement | null) {\n  if (!rootElement) {\n    throw Error('No root element')\n  }\n  const rootStore = getStore()\n  render(\n    <StrictMode>\n      <App {...rootStore} />\n    </StrictMode>,\n    document.getElementById('root'),\n  )\n}\n\nrenderApp(document.getElementById('root'))\n"],"sourceRoot":""}